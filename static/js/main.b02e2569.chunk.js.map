{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","title","year","summary","poster","genres","className","src","alt","map","genre","index","slice","Home","state","isLoding","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kWAoCeA,MA/Bf,YAA4D,EAA3CC,GAA4C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC/C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKP,EAAOA,MAAOA,IACrC,sBAAKK,UAAU,cAAf,UAGA,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,gBAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAChB,OAAO,oBAAgBL,UAAU,eAA1B,SAA0CI,GAAjCC,QAGxB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBC6CGC,G,kNAzDbC,MAAQ,CACNC,UAAU,EACVC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IAAI,4DANV,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CAACN,OAAQA,EAAQD,UAAU,IAR/B,2C,kEAeVQ,KAAKN,c,+BAIG,IAAD,EACsBM,KAAKT,MAA1BC,EADD,EACCA,SAAUC,EADX,EACWA,OAElB,OACE,mCACID,EACA,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,yBAGF,qBAAKA,UAAU,SAAf,SAEIU,EAAOP,KAAI,SAAAe,GAAK,OACd,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVE,KAAMsB,EAAMtB,KACZD,MAAOuB,EAAMvB,MACbE,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QANTmB,EAAMxB,e,GAvCV0B,IAAMC,YCAVC,MAJf,WACI,OAAO,oD,qBCaIC,MARf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAWH,IAChC,cAAC,IAAD,CAAOE,KAAK,IAAIE,OAAO,EAAMD,UAAWlB,QCA/BoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,UAK1Bb,M","file":"static/js/main.b02e2569.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\n\n\nfunction Movie({ id, title, year, summary, poster, genres }){\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n            \n            \n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            <ul className=\"movie__genres\">\n                {genres.map((genre, index) => {\n                    return <li key={index} className=\"movie__genre\">{genre}</li>\n                })}\n            </ul>\n            <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n            \n            </div>\n        </div>\n        \n    )\n}\n\nMovie.propTypes = { \n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n\n\n","import React from 'react';\nimport axios from 'axios';\n\nimport Movie from '../components/Movie';\nimport './Home.css';\n\nclass Home extends React.Component {\n  state = {\n    isLoding: true,\n    movies: [],\n  }\n\n  getMovies = async () => {\n    // 구조 분해 할당 \n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n    \n    this.setState({movies: movies, isLoding: false})\n    //console.log(movies);\n    //console.log(this.state.movies);\n\n\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n\n\n  render() {\n    const { isLoding, movies } = this.state;\n\n    return (\n      <>\n        { isLoding ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loding...</span>\n          </div>\n          ) : (\n          <div className=\"movies\">\n            {\n              movies.map(movie => (\n                <Movie\n                  key={movie.id} \n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n                )\n              )\n            }\n          </div>\n          )\n        }\n      </>\n    )\n  }\n  \n  }\nexport default Home;\n","import React from 'react';\n\nfunction About(){\n    return <span>About This Page</span>\n}\n\nexport default About;","import React from 'react';\nimport Home from './routes/Home'\nimport About from './routes/About'\nimport { HashRouter, Route } from 'react-router-dom'\nimport './App.css';\n\n\n\nfunction App(){\n  return (\n    <HashRouter>\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/\" exact={true} component={Home} />\n    </HashRouter>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport About from './routes/About';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <About />\n  </React.StrictMode>,\n  document.getElementById('root2')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}